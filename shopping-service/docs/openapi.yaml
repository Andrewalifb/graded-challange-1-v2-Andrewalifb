openapi: 3.0.0
info:
  title: Your API Title
  version: 1.0.0
servers:
- url: http://localhost:8081
tags:
- name: Transactions
- name: Products
paths:
  /api/v1/transactions:
    post:
      tags:
      - Transactions
      summary: Create a new transaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreateRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCreateResponse'
    get:
      tags:
      - Transactions
      summary: Get all transactions
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Limit the number of transactions returned
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for transactions pagination
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionPaginationResponse'
  /api/v1/transactions/{id}:
    get:
      tags:
      - Transactions
      summary: Get a transaction by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Transaction ID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionGetResponse'
    put:
      tags:
      - Transactions
      summary: Update a transaction by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Transaction ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionUpdateRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionUpdateResponse'
    delete:
      tags:
      - Transactions
      summary: Delete a transaction by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Transaction ID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionDeleteResponse'
    patch:
      tags:
      - Transactions
      summary: Update a transaction after payment
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Transaction ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchTransactionByIdRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchTransactionByIdResponse'
  /api/v1/products:
    post:
      tags:
      - Products
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateResponse'
    get:
      tags:
      - Products
      summary: Get all products
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Limit the number of products returned
        - in: query
          name: page
          schema:
            type: integer
          description: Page number for products pagination
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPaginationResponse'
  /api/v1/products/{id}:
    get:
      tags:
      - Products
      summary: Get a product by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Product ID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGetResponse'
    put:
      tags:
      - Products
      summary: Update a product by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Product ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdateRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdateResponse'
    delete:
      tags:
      - Products
      summary: Delete a product by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Product ID
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDeleteResponse'
components:
  schemas:
    TransactionCreateRequest:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductDetailRequest'
        userId:
          type: string
        branchId:
          type: string
    TransactionCreateResponse:
      type: object
      properties:
        id:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductDetailResponse'
        paymentId:
          type: string
        userId:
          type: string
        branchId:
          type: string
        status:
          type: string
        totalAmount:
          type: number
        deliveryDetails:
          type: string
    TransactionUpdateRequest:
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductDetailRequest'
        paymentId:
          type: string
        userId:
          type: string
        branchId:
          type: string
        status:
          type: string
        totalAmount:
          type: number
        deliveryDetails:
          type: string
    TransactionUpdateResponse:
      type: object
      properties:
        id:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductDetailResponse'
        paymentId:
          type: string
        userId:
          type: string
        branchId:
          type: string
        status:
          type: string
        totalAmount:
          type: number
        deliveryDetails:
          type: string
    TransactionDeleteResponse:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
    TransactionGetResponse:
      type: object
      properties:
        id:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductDetailResponse'
        paymentId:
          type: string
        userId:
          type: string
        status:
          type: string
        totalAmount:
          type: number
        deliveryDetails:
          type: string
    TransactionPaginationResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/TransactionGetResponse'
        limit:
          type: integer
        page:
          type: integer
        maxPage:
          type: integer
        count:
          type: integer
    PatchTransactionByIdRequest:
      type: object
      properties:
        paymentData:
          $ref: '#/components/schemas/PaymentApiRequest'
    PatchTransactionByIdResponse:
      type: object
      properties:
        paymentData:
          $ref: '#/components/schemas/DataPaymentResponse'
        transactionData:
          $ref: '#/components/schemas/TransactionGetResponse'
    ProductCreateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category:
          type: string
        stock:
          type: integer
        imageUrl:
          type: string
        brand:
          type: string
        rating:
          type: number
    ProductCreateResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category:
          type: string
        stock:
          type: integer
        imageUrl:
          type: string
        brand:
          type: string
        rating:
          type: number
    ProductUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category:
          type: string
        stock:
          type: integer
        imageUrl:
          type: string
        brand:
          type: string
        rating:
          type: number
    ProductUpdateResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category:
          type: string
        stock:
          type: integer
        imageUrl:
          type: string
        brand:
          type: string
        rating:
          type: number
    ProductDeleteResponse:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
    ProductGetResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category:
          type: string
        stock:
          type: integer
        imageUrl:
          type: string
        brand:
          type: string
        rating:
          type: number
    ProductPaginationResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ProductGetResponse'
        limit:
          type: integer
        page:
          type: integer
        maxPage:
          type: integer
        count:
          type: integer
    ProductDetailRequest:
      type: object
      properties:
        productId:
          type: string
        quantity:
          type: integer
    ProductDetailResponse:
      type: object
      properties:
        productId:
          type: string
        productName:
          type: string
        quantity:
          type: integer
        price:
          type: number
        subTotal:
          type: number
    PaymentApiRequest:
      type: object
      properties:
        method:
          type: string
        cardType:
          type: string
    DataPaymentResponse:
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
        method:
          type: string
        status:
          type: string
        cardType:
          type: string
        transactionFee:
          type: number

